#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# ########################################################################
# Environment
# ########################################################################

# Load RVM into a shell session *as a function*
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Load NVM
#source $(brew --prefix nvm)/nvm.sh

# Setup Ruby
eval "$(rbenv init -)"

# Setup Docker version management
[[ -s "$(brew --prefix dvm)/dvm.sh" ]] && source "$(brew --prefix dvm)/dvm.sh"

# Setup openwhisk autocomplete
#if [[ -f "${HOME}/.local/bin/wsk_cli_bash_completion.sh" ]]; then
#  source "${HOME}/.local/bin/wsk_cli_bash_completion.sh"
#fi


# ########################################################################
# Aliases
# ########################################################################

## Misc :)
alias less='less -r'                          # raw control characters
alias whence='type -a'                        # where, of a sort
alias egrep='egrep --color=auto'              # show differences in colour
alias fgrep='fgrep --color=auto'              # show differences in colour
alias rgrep='grep -r --color=auto'            # recursive grep in colour

# Some shortcuts for different directory listings
alias ls='ls -hGF'                             # classify files in colour
alias dir='ls --color=auto --format=vertical'
alias vdir='ls --color=auto --format=long'

alias vi=vim

#alias t='todo.sh -d /opt/todo.txt_cli-2.7/todo.cfg'
alias t='todo.sh -d ~/Dropbox/todo/todo.cfg'
#alias th='todo.sh -d ~/Dropbox/todo/todohome.cfg'

alias mongodb='mongod --config /usr/local/etc/mongod.conf'
alias dm='docker-machine'
# alias ddsh='docker run --rm -it -v ${PWD}:/files dset-docker-registry:5000/dset-docker-machine'
alias ddsh='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v ${PWD}:/files registry.ng.bluemix.net/ibmbluemixsupport/dset-docker-machine:latest'
alias dmenv='function _dmenv(){ eval $(docker-machine env $1); };_dmenv'
alias icenv='function _icenv(){ export DOCKER_HOST=tcp://containers-api.ng.bluemix.net:8443; export DOCKER_CERT_PATH=/Users/jimmcvea/.ice/certs; export DOCKER_TLS_VERIFY=1; };_icenv'
alias openstack='dosc openstack'
# alias Whisk client calls with a docker image
alias dwsk='docker run -ti --rm -v $PWD:/data --env-file ${WSK_PROPS_FILE:-~/.wskprops} jmcvea/openwhisk-client'

# simplify access to secretkeeper
#alias sk='kubectl exec -it $(kubectl get po | grep secret-keeper | grep Running | cut -d" " -f1) -- /bin/sh'
alias k=kubectl

alias git-pretty='git log --graph --oneline --all --decorate'

# NETWORKING
# ----------
alias openports='lsof -i | grep -E "(LISTEN|ESTABLISHED)"'
alias myip='curl ip.appspot.com'
alias flushdns='dscacheutil -flushcache'

# SYSTEMS OPERATIONS & INFORMATION
# --------------------------------
alias finderShowHidden='defaults write com.apple.finder AppleShowAllFiles TRUE; killall Finder /System/Library/CoreServices/Finder.app'
alias finderHideHidden='defaults write com.apple.finder AppleShowAllFiles FALSE; killall Finder /System/Library/CoreServices/Finder.app'


# ########################################################################
# Functions
# ########################################################################

timer() { sleep $(($1*60)); terminal-notifier -message "${*:2}" }

new-card() {
  local PRIORITY="${1}"
  shift;
  local CONTENT=$@
  osascript $HOME/.local/bin/open-sticky.scpt $PRIORITY "$CONTENT"
}

# Convert a .mov file to animated .gif
mov2gif() {
    ffmpeg -i "$1" -vf scale=800:-1 -r 10 -f image2pipe -vcodec ppm - |\
    convert -delay 5 -layers Optimize -loop 0 - "${1%.*}.gif"
}

# Login for IBM containers
iclogin() {
  BEARER=$(cf oauth-token | awk '{ print $2; }')
  ORG=$(cf target | awk '/Org:/ { print $2; }')
  ORGID=$(cf org --guid $ORG)
  #note that the requirement to append the org-id is being removed
  docker login -u bearer -p "$BEARER|$ORGID" registry.ng.bluemix.net
}

# Simplify the login process for CloudFoundry
jcf() {
  # A first arg may be the target env.  Default is YP
  local TARGET=yp
  if [ $# -ne 0 ]; then
    local TARGET=${1}
    shift;
  fi

  # A next arg may be a username.  Set a desired default first
  local CF_USER=jimmcvea@us.ibm.com
  if [ $# -ne 0 ]; then
    local CF_USER=${1}
    shift;
  fi

  local CF_HOME=$HOME/.cf/$TARGET/$CF_USER
  #local CF_PWD=xxx

  # Set the API URL
  case $TARGET in
    "ys1")  local CF_API=https://api.stage1.ng.bluemix.net;;
    "lyp")  local CF_API=https://api.eu-gb.bluemix.net;;
    "lys1") local CF_API=https://api.stage1.eu-gb.bluemix.net;;
    "syp")  local CF_API=https://api.au-syd.bluemix.net;;
    "wyp")  local CF_API=https://api.us-east.bluemix.net;;
    "fyp")  local CF_API=https://api.eu-de.bluemix.net;;
    *)      local CF_API=https://api.ng.bluemix.net;;
  esac

  # Perform the login
  cf login -u $CF_USER -a $CF_API -p $CF_PWD $*
}

# Wrap OpenStack client calls with a docker image
dosc() {
  docker run -ti --rm -v $PWD:/data --env-file ${OSC_RC_ENV_FILE:-~/.osc_rc.env} -e "OS_PASSWORD=$CF_PWD" jmcvea/openstack-client ${*}
}

# Simplify access to secret-keeper
sk() {
  jq -r "if .$1|type == \"object\" then
    .$1|keys | \"Keys for .$1:\\n  \" + join(\"\\n  \")
  else
    .$1
  end" $HOME/Box/acs-fabric-secrets/secrets.json
  #docker run -it --rm registry.ng.bluemix.net/ibm-cloud-support/secret-keeper
  #docker run -it --rm redis redis-cli -h sl-us-south-1-portal.22.dblayer.com -p 38099 -a KVZWQMNZMZJJGTPA $@
}
sk-keys() {
  sk keys "secret:*$1*" | tr -d '"'
}
sk-show() {
  sk get "$1" | tr -d '"'
}
sk-store() {
  sk set "$1" "$2" | tr -d '"'
}

### Added by the Bluemix CLI
if [[ -s "/usr/local/ibmcloud/autocomplete/zsh_autocomplete" ]]; then
  source /usr/local/ibmcloud/autocomplete/zsh_autocomplete
fi


export PATH="$HOME/.yarn/bin:$PATH"

# added by travis gem
[ -f /Users/jimmcvea/.travis/travis.sh ] && source /Users/jimmcvea/.travis/travis.sh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#
# Kubernetes prompt customization
#
source "/usr/local/opt/kube-ps1/share/kube-ps1.sh"
PS1='
$(kube_ps1)'$PS1

#
# Set Kube configuration
#
kcfg() {
  $(ic ks cluster-config --cluster ${1:-jimmcvea-cluster} --export)
  export INGRESS_HOST=`ic ks cluster-get ${1:-jimmcvea-cluster} | grep "Ingress Subdomain:" | awk '{print $3}'`
}

#
# Kubernetes proxied dashboard quick open
#
kdash() {
  : ${KUBECONFIG:?"Need to set the env var KUBECONFIG before starting the dashboard"}
  kubectl config view -o jsonpath='{.users[0].user.auth-provider.config.id-token}' | pbcopy
  kubectl proxy &
  DASH_PID=$!
  echo "Kubernetes dashboard started.  PID=$DASH_PID"
  echo "id-token is stored in your pastebin"
  open http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/
}

